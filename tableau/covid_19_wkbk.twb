<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='clean_data' inline='true' name='federated.090agmf10acl1g1eoxdrd03bwr62' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='clean_data' name='textscan.0eflqnp0pbmyhr1ctueni1lz8lmr'>
            <connection class='textscan' directory='C:/Users/JOSH/AnacondaProjects/corna/data/processed' filename='clean_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0eflqnp0pbmyhr1ctueni1lz8lmr' name='clean_data.csv' table='[clean_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='region' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='real' name='lat' ordinal='3' />
            <column datatype='real' name='long' ordinal='4' />
            <column datatype='real' name='var' ordinal='5' />
            <column datatype='real' name='new_cases_t0' ordinal='6' />
            <column datatype='real' name='new_cases_t1' ordinal='7' />
            <column datatype='string' name='var_name' ordinal='8' />
            <column datatype='integer' name='city' ordinal='9' />
            <column datatype='string' name='final_state' ordinal='10' />
            <column datatype='real' name='state_lat' ordinal='11' />
            <column datatype='real' name='state_long' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>var</remote-name>
            <remote-type>5</remote-type>
            <local-name>[var]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>var</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_t0</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_t0]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>new_cases_t0</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_t1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_t1]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>new_cases_t1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>var_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[var_name]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>var_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>20</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>final_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[final_state]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>final_state</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[state_lat]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>state_lat</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[state_long]</local-name>
            <parent-name>[clean_data.csv]</parent-name>
            <remote-alias>state_long</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Max Date' datatype='boolean' name='[Calculation_3372914673829322752]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[date] = { FIXED :max([date])}' />
      </column>
      <column caption='Growth Rate' datatype='real' name='[Calculation_3372914673838850050]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([new_cases_t0])/sum([new_cases_t1])' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_3372914673872211971]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Index Filter' datatype='boolean' name='[Calculation_3372914673872375812]' role='measure' type='nominal'>
        <calculation class='tableau' formula='Index() &lt; 20'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Index (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[long]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='real' name='[new_cases_t0]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' default-format='n#,##0.00000;-#,##0.00000' name='[state_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' default-format='n#,##0.00000;-#,##0.00000' name='[state_long]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='real' name='[var]' role='measure' type='quantitative' />
      <column datatype='string' name='[var_name]' role='dimension' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[lat]' derivation='None' name='[none:lat:ok]' pivot='key' type='ordinal' />
      <column-instance column='[long]' derivation='None' name='[none:long:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state_lat]' derivation='None' name='[none:state_lat:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state_lat]' derivation='None' name='[none:state_lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state_long]' derivation='None' name='[none:state_long:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state_long]' derivation='None' name='[none:state_long:qk]' pivot='key' type='quantitative' />
      <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_cases_t0]' derivation='Sum' name='[sum:new_cases_t0:qk]' pivot='key' type='quantitative' />
      <column-instance column='[var]' derivation='Sum' name='[sum:var:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3372914673838850050]' derivation='User' name='[usr:Calculation_3372914673838850050:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Lat,Long)' hidden='true' name='[Action (Lat,Long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:lat:ok]' />
          <groupfilter function='level-members' level='[none:long:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State Lat)' hidden='true' name='[Action (State Lat)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:state_lat:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State Lat,State Long)' hidden='true' name='[Action (State Lat,State Long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:state_lat:ok]' />
          <groupfilter function='level-members' level='[none:state_long:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State Lat,State Long,Var Name)' hidden='true' name='[Action (State Lat,State Long,Var Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:state_lat:ok]' />
          <groupfilter function='level-members' level='[none:state_long:ok]' />
          <groupfilter function='level-members' level='[var_name]' />
        </groupfilter>
      </group>
      <group caption='Action (country,state_lat,state_long,var_name)' hidden='true' name='[Action (country,state_lat,state_long,var_name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[none:state_lat:ok]' />
          <groupfilter function='level-members' level='[none:state_long:ok]' />
          <groupfilter function='level-members' level='[var_name]' />
        </groupfilter>
      </group>
      <group caption='Action (final_state)' hidden='true' name='[Action (final_state)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[final_state]' />
        </groupfilter>
      </group>
      <group caption='Action (state_lat) 1' hidden='true' name='[Action (state_lat) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state_lat]' />
        </groupfilter>
      </group>
      <group caption='Action (state_lat)' hidden='true' name='[Action (state_lat)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:state_lat:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (state_lat,state_long) 1' hidden='true' name='[Action (state_lat,state_long) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state_lat]' />
          <groupfilter function='level-members' level='[state_long]' />
        </groupfilter>
      </group>
      <group caption='Action (state_lat,state_long)' hidden='true' name='[Action (state_lat,state_long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:state_lat:ok]' />
          <groupfilter function='level-members' level='[none:state_long:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (state_lat,state_long,Var Name)' hidden='true' name='[Action (state_lat,state_long,Var Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:state_lat:ok]' />
          <groupfilter function='level-members' level='[none:state_long:ok]' />
          <groupfilter function='level-members' level='[var_name]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (state_lat,state_long,Var Name)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:state_lat:qk]' />
          <groupfilter function='level-members' level='[none:state_long:qk]' />
          <groupfilter function='level-members' level='[none:var_name:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country'>
          <field>[country]</field>
          <field>[final_state]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673831006209:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:new_cases_t0:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673838850050:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='days_since' inline='true' name='federated.1wcfqkj0olhvf214b26dd1xz7w2i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='days_since' name='textscan.163oymw0qrewy71bqyxaq04sl4o1'>
            <connection class='textscan' directory='C:/Users/JOSH/AnacondaProjects/corna/data/processed' filename='days_since.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.163oymw0qrewy71bqyxaq04sl4o1' name='days_since.csv' table='[days_since#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='var_name' ordinal='2' />
            <column datatype='real' name='var' ordinal='3' />
            <column datatype='real' name='days_since_100' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[days_since.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[days_since.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[days_since.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>var_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[var_name]</local-name>
            <parent-name>[days_since.csv]</parent-name>
            <remote-alias>var_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>var</remote-name>
            <remote-type>5</remote-type>
            <local-name>[var]</local-name>
            <parent-name>[days_since.csv]</parent-name>
            <remote-alias>var</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_since_100</remote-name>
            <remote-type>5</remote-type>
            <local-name>[days_since_100]</local-name>
            <parent-name>[days_since.csv]</parent-name>
            <remote-alias>days_since_100</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Min_Days_Since' datatype='boolean' name='[Calculation_4600708524000423936]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[days_since_100] &gt; -5 &#13;&#10;AND&#13;&#10;[days_since_100] &lt;=40' />
      </column>
      <column caption='Log_Var' datatype='real' name='[Calculation_4600708524004065281]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='log(SUM([var]))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Days Since 100' datatype='real' name='[days_since_100]' role='dimension' type='ordinal' />
      <column caption='Var' datatype='real' name='[var]' role='measure' type='quantitative' />
      <column caption='Var Name' datatype='string' name='[var_name]' role='dimension' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;occupied Palestinian territory&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='states_daily_tests' inline='true' name='federated.1dyvmz0008mux81gkv9jr0wcjta3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='states_daily_tests' name='textscan.0yp2ubl0w7r8l61azqyr21o12g9k'>
            <connection class='textscan' directory='C:/Users/JOSH/AnacondaProjects/corna/data/processed' filename='states_daily_tests.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0yp2ubl0w7r8l61azqyr21o12g9k' name='states_daily_tests.csv' table='[states_daily_tests#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='positive' ordinal='2' />
            <column datatype='real' name='negative' ordinal='3' />
            <column datatype='real' name='pending' ordinal='4' />
            <column datatype='string' name='hospitalized' ordinal='5' />
            <column datatype='real' name='death' ordinal='6' />
            <column datatype='integer' name='total' ordinal='7' />
            <column datatype='datetime' name='dateChecked' ordinal='8' />
            <column datatype='real' name='daily_new_tst_rcrd' ordinal='9' />
            <column datatype='real' name='daily_new_tst_rcrd_t1' ordinal='10' />
            <column datatype='string' name='full_state' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative</remote-name>
            <remote-type>5</remote-type>
            <local-name>[negative]</local-name>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias>negative</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending]</local-name>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias>pending</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalized</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hospitalized]</local-name>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias>hospitalized</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death]</local-name>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias>death</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total]</local-name>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias>total</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dateChecked</remote-name>
            <remote-type>135</remote-type>
            <local-name>[dateChecked]</local-name>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias>dateChecked</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_new_tst_rcrd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_new_tst_rcrd]</local-name>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias>daily_new_tst_rcrd</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_new_tst_rcrd_t1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_new_tst_rcrd_t1]</local-name>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias>daily_new_tst_rcrd_t1</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>full_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[full_state]</local-name>
            <parent-name>[states_daily_tests.csv]</parent-name>
            <remote-alias>full_state</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='perc_positive_test' datatype='real' name='[Calculation_5299610892975808512]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([positive])/sum([total])' />
      </column>
      <column caption='max_date_data' datatype='boolean' name='[Calculation_5299610892993404929]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[date] = {FIXED : MAX([date])}' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_5299610892993622018]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='top index' datatype='boolean' name='[Calculation_5299610892993830915]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_5299610892993622018] &lt;= 15'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[daily_new_tst_rcrd]' role='measure' type='quantitative' />
      <column datatype='string' name='[full_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[daily_new_tst_rcrd]' derivation='Sum' name='[sum:daily_new_tst_rcrd:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5299610892975808512]' derivation='User' name='[usr:Calculation_5299610892975808512:qk]' pivot='key' type='quantitative' />
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (full_state,state)' hidden='true' name='[Action (full_state,state)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[full_state]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (state)' hidden='true' name='[Action (state)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.401596' measure-ordering='alphabetic' measure-percentage='0.598404' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:daily_new_tst_rcrd:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dyvmz0008mux81gkv9jr0wcjta3]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.090agmf10acl1g1eoxdrd03bwr62'>
      <datasources>
        <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
      </datasources>
      <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
        <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]'>
        <groupfilter function='member' level='[none:country:nk]' member='&quot;US&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map' />
      <link caption='Filter 1 (generated)' delimiter=',' escape='\' expression='tsl:Dashboard%201?%5Bfederated.090agmf10acl1g1eoxdrd03bwr62%5D.%5Bfinal_state%5D~s0=&lt;[final_state]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='perc_positive_map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='perc_positive_map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <datasources>
      <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
    </datasources>
    <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
      <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Conf'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column caption='Max Date' datatype='boolean' name='[Calculation_3372914673829322752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] = { FIXED :max([date])}' />
            </column>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_3372914673829322752]' derivation='None' name='[none:Calculation_3372914673829322752:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[var]' derivation='Sum' name='[sum:var:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[var]' role='measure' type='quantitative' />
            <column datatype='string' name='[var_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]'>
            <groupfilter function='level-members' level='[final_state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_3372914673829322752:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]'>
            <groupfilter function='member' level='[none:var_name:nk]' member='&quot;conf&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]' value='N' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='18' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{261F9AA9-95D3-4C70-A86A-4F0A85545C4A}' />
    </worksheet>
    <worksheet name='Conf_daily_new'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases_t0]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases_t0]' derivation='Sum' name='[sum:new_cases_t0:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[var_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]'>
            <groupfilter function='level-members' level='[final_state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]'>
            <groupfilter function='member' level='[none:var_name:nk]' member='&quot;conf&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.090agmf10acl1g1eoxdrd03bwr62].[tdy:date:qk]' field-type='quantitative' max='#2020-04-20 20:55:13#' min='#2020-01-19 03:04:46.547#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:new_cases_t0:qk]</rows>
        <cols>[federated.090agmf10acl1g1eoxdrd03bwr62].[tdy:date:qk]</cols>
        <forecast-specification auto-forecast-agg='false' band-confidence-level='99.000000' enabled='false' fill-type='fill-missing' forecast-agg='Day-Trunc' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{6DE11923-66F3-4B5A-A60C-FC128E41BDF3}' />
    </worksheet>
    <worksheet name='Daily Growth'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[new_cases_t0]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases_t0]' derivation='Sum' name='[sum:new_cases_t0:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:date:qk]' included-values='in-range'>
            <min>#2020-02-10#</min>
          </filter>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:new_cases_t0:qk]</rows>
        <cols>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</cols>
      </table>
      <simple-id uuid='{8DD1353D-80C1-4C50-A155-4BA3C22A33A7}' />
    </worksheet>
    <worksheet name='Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column caption='Max Date' datatype='boolean' name='[Calculation_3372914673829322752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] = { FIXED :max([date])}' />
            </column>
            <column-instance column='[final_state]' derivation='Attribute' name='[attr:final_state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_3372914673829322752]' derivation='None' name='[none:Calculation_3372914673829322752:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[var]' derivation='Sum' name='[sum:var:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[var]' role='measure' type='quantitative' />
            <column datatype='string' name='[var_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]'>
            <groupfilter function='level-members' level='[final_state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]'>
            <groupfilter function='member' level='[none:Calculation_3372914673829322752:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]'>
            <groupfilter function='member' level='[none:var_name:nk]' member='&quot;death&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]' value='N' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='18' />
            <format attr='font-weight' value='bold' />
            <format attr='in-tooltip' field='[federated.090agmf10acl1g1eoxdrd03bwr62].[attr:final_state:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]' />
              <lod column='[federated.090agmf10acl1g1eoxdrd03bwr62].[attr:final_state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8B68C26E-28E8-45FC-BE03-EEDB5281031F}' />
    </worksheet>
    <worksheet name='Log_Scale_Growth'>
      <table>
        <view>
          <datasources>
            <datasource caption='days_since' name='federated.1wcfqkj0olhvf214b26dd1xz7w2i' />
          </datasources>
          <datasource-dependencies datasource='federated.1wcfqkj0olhvf214b26dd1xz7w2i'>
            <column caption='Min_Days_Since' datatype='boolean' name='[Calculation_4600708524000423936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[days_since_100] &gt; -5 &#13;&#10;AND&#13;&#10;[days_since_100] &lt;=40' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Sum' caption='Days Since 100' datatype='real' name='[days_since_100]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_4600708524000423936]' derivation='None' name='[none:Calculation_4600708524000423936:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[days_since_100]' derivation='None' name='[none:days_since_100:ok]' pivot='key' type='ordinal' />
            <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[var]' derivation='Sum' name='[sum:var:qk]' pivot='key' type='quantitative' />
            <column caption='Var' datatype='real' name='[var]' role='measure' type='quantitative' />
            <column caption='Var Name' datatype='string' name='[var_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:Calculation_4600708524000423936:nk]'>
            <groupfilter function='member' level='[none:Calculation_4600708524000423936:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Korea, South&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;US&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:days_since_100:ok]'>
            <groupfilter from='-54.0' function='range' level='[none:days_since_100:ok]' to='53.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:var_name:nk]'>
            <groupfilter function='member' level='[none:var_name:nk]' member='&quot;conf&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:var_name:nk]</column>
            <column>[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:days_since_100:ok]</column>
            <column>[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:Calculation_4600708524000423936:nk]</column>
            <column>[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[sum:var:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:country:nk]' />
              <text column='[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[sum:var:qk]</rows>
        <cols>[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:days_since_100:ok]</cols>
      </table>
      <simple-id uuid='{AEFF7D3F-7F4A-49D4-8CE3-E6ECBC51DA0D}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column caption='Max Date' datatype='boolean' name='[Calculation_3372914673829322752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] = { FIXED :max([date])}' />
            </column>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases_t0]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_t1]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3372914673829322752]' derivation='None' name='[none:Calculation_3372914673829322752:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[final_state]' derivation='None' name='[none:final_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_lat]' derivation='None' name='[none:state_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state_long]' derivation='None' name='[none:state_long:qk]' pivot='key' type='quantitative' />
            <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' datatype='real' default-format='n#,##0.00000;-#,##0.00000' name='[state_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' default-format='n#,##0.00000;-#,##0.00000' name='[state_long]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[new_cases_t0]' derivation='Sum' name='[sum:new_cases_t0:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases_t1]' derivation='Sum' name='[sum:new_cases_t1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[var]' derivation='Sum' name='[sum:var:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[var]' role='measure' type='quantitative' />
            <column datatype='string' name='[var_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]'>
            <groupfilter function='member' level='[none:Calculation_3372914673829322752:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]' context='true'>
            <groupfilter function='member' level='[none:var_name:nk]' member='&quot;conf&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]' />
              <lod column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]' />
              <lod column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]' />
              <lod column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]' />
              <tooltip column='[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:new_cases_t0:qk]' />
              <tooltip column='[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:new_cases_t1:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#000000' indent='3510'>Country:</run>
                <run fontcolor='#787878' indent='3510'>Æ&#9;</run>
                <run fontcolor='#000000' indent='3510'>&lt;[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]&gt;</run>
                <run indent='3510'>Æ&#10;</run>
                <run fontcolor='#000000' indent='3510'>State:&#9;&lt;[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]&gt;</run>
                <run indent='3510'>Æ&#10;</run>
                <run fontcolor='#000000' indent='3510'>Total number of</run>
                <run fontcolor='#787878' indent='3510'>Æ </run>
                <run fontcolor='#000000' indent='3510'>&lt;[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]&gt; cases</run>
                <run fontcolor='#787878' indent='3510'>Æ &#9;</run>
                <run fontcolor='#000000' indent='3510'>&lt;[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]&gt;</run>
                <run indent='3510'>Æ&#10;</run>
                <run fontcolor='#000000' indent='3510'>Confirmed Cases Growth Yesterday: &#9;&lt;[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:new_cases_t0:qk]&gt;</run>
                <run indent='3510'>Æ&#10;</run>
                <run fontcolor='#000000' indent='3510'>Confirmed Cases Growth 2 Days :&#9;&lt;[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:new_cases_t1:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state_lat:qk]</rows>
        <cols>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state_long:qk]</cols>
      </table>
      <simple-id uuid='{C2C51EF9-7342-4893-B20A-47B89878A540}' />
    </worksheet>
    <worksheet name='Recov'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column caption='Max Date' datatype='boolean' name='[Calculation_3372914673829322752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] = { FIXED :max([date])}' />
            </column>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_3372914673829322752]' derivation='None' name='[none:Calculation_3372914673829322752:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[var]' derivation='Sum' name='[sum:var:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[var]' role='measure' type='quantitative' />
            <column datatype='string' name='[var_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]'>
            <groupfilter function='level-members' level='[final_state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]'>
            <groupfilter function='member' level='[none:Calculation_3372914673829322752:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]'>
            <groupfilter function='member' level='[none:var_name:nk]' member='&quot;recovered&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]' value='N' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='18' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{69152E81-6AA2-48A0-9439-EA661357C528}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[var]' derivation='Sum' name='[sum:var:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[var]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{9B0E718D-7AFE-46BA-971C-42D0DACB9618}' />
    </worksheet>
    <worksheet name='Top_Growth'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Top New</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column caption='Max Date' datatype='boolean' name='[Calculation_3372914673829322752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] = { FIXED :max([date])}' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_3372914673872211971]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Index Filter' datatype='boolean' name='[Calculation_3372914673872375812]' role='measure' type='nominal'>
              <calculation class='tableau' formula='Index() &lt; 20'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases_t0]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3372914673829322752]' derivation='None' name='[none:Calculation_3372914673829322752:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[final_state]' derivation='None' name='[none:final_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases_t0]' derivation='Sum' name='[sum:new_cases_t0:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3372914673872211971]' derivation='User' name='[usr:Calculation_3372914673872211971:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_3372914673872375812]' derivation='User' name='[usr:Calculation_3372914673872375812:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column datatype='string' name='[var_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673872211971:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:new_cases_t0:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673872211971:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]'>
            <groupfilter function='level-members' level='[final_state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]'>
            <groupfilter function='member' level='[none:Calculation_3372914673829322752:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]'>
            <groupfilter function='member' level='[none:var_name:nk]' member='&quot;conf&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673872375812:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_3372914673872375812:nk:1]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:new_cases_t0:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673872375812:nk:1]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.090agmf10acl1g1eoxdrd03bwr62].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]</rows>
        <cols>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{317AE2CA-F773-4305-B50F-CA2D43657B88}' />
    </worksheet>
    <worksheet name='confts'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[var]' derivation='Sum' forecast-column-base='[sum:var:qk]' forecast-column-type='forecast-value' name='[fVal:sum:var:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[var]' derivation='Sum' name='[sum:var:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[var]' role='measure' type='quantitative' />
            <column datatype='string' name='[var_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]'>
            <groupfilter function='level-members' level='[final_state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]'>
            <groupfilter function='member' level='[none:var_name:nk]' member='&quot;conf&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.090agmf10acl1g1eoxdrd03bwr62].[tdy:date:qk]' field-type='quantitative' max='#2020-04-20 20:55:13#' min='#2020-01-19 03:04:46.547#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.090agmf10acl1g1eoxdrd03bwr62].[fVal:sum:var:qk]</rows>
        <cols>[federated.090agmf10acl1g1eoxdrd03bwr62].[tdy:date:qk]</cols>
        <forecast-specification auto-forecast-agg='false' band-confidence-level='99.000000' enabled='true' fill-type='fill-missing' forecast-agg='Day-Trunc' ignore-last='0' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{5025CA2E-D831-4AEC-97FE-E899FA1CF3A7}' />
    </worksheet>
    <worksheet name='confts (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[var]' derivation='Sum' name='[sum:var:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[var]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]</rows>
        <cols>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</cols>
      </table>
      <simple-id uuid='{948F08C3-1666-48E1-871F-25C22B719FB7}' />
    </worksheet>
    <worksheet name='deathts'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[var]' derivation='Sum' name='[sum:var:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[var]' role='measure' type='quantitative' />
            <column datatype='string' name='[var_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]'>
            <groupfilter function='level-members' level='[final_state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]'>
            <groupfilter function='member' level='[none:var_name:nk]' member='&quot;death&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]</rows>
        <cols>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</cols>
      </table>
      <simple-id uuid='{1854D182-03D0-4720-AAC3-693DF0911D7C}' />
    </worksheet>
    <worksheet name='grth_rt'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column caption='Growth Rate' datatype='real' name='[Calculation_3372914673838850050]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([new_cases_t0])/sum([new_cases_t1])' />
            </column>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[new_cases_t0]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_t1]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3372914673838850050]' derivation='User' name='[usr:Calculation_3372914673838850050:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[var_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]'>
            <groupfilter function='level-members' level='[final_state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:date:qk]' included-values='in-range'>
            <min>#2020-02-19#</min>
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]'>
            <groupfilter function='member' level='[none:var_name:nk]' member='&quot;conf&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:date:qk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673838850050:qk]' field-type='quantitative' max='4.0' min='-0.40000000000000002' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673838850050:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-pane' value='1.0' value-column='[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673838850050:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673838850050:qk]</rows>
        <cols>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</cols>
      </table>
      <simple-id uuid='{154CB948-2E3C-4D3E-9376-E53C07B87FD7}' />
    </worksheet>
    <worksheet name='perc_pos_ts'>
      <table>
        <view>
          <datasources>
            <datasource caption='states_daily_tests' name='federated.1dyvmz0008mux81gkv9jr0wcjta3' />
          </datasources>
          <datasource-dependencies datasource='federated.1dyvmz0008mux81gkv9jr0wcjta3'>
            <column caption='perc_positive_test' datatype='real' name='[Calculation_5299610892975808512]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([positive])/sum([total])' />
            </column>
            <column datatype='real' name='[daily_new_tst_rcrd]' role='measure' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[full_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[daily_new_tst_rcrd]' derivation='Sum' name='[sum:daily_new_tst_rcrd:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5299610892975808512]' derivation='User' name='[usr:Calculation_5299610892975808512:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (full_state,state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[full_state]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (State)]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (state)]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (full_state,state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]' scope='rows' value='Percent Positive Tests' />
            <encoding attr='space' class='0' field='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:daily_new_tst_rcrd:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]' field-type='quantitative' max='0.29999999999999999' min='-0.061038789109041959' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:daily_new_tst_rcrd:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:daily_new_tst_rcrd:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:daily_new_tst_rcrd:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:daily_new_tst_rcrd:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk] + [federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:daily_new_tst_rcrd:qk])</rows>
        <cols>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[md:date:ok]</cols>
      </table>
      <simple-id uuid='{E4A6415D-673A-4C48-AD9D-B3B2B00AD2BD}' />
    </worksheet>
    <worksheet name='perc_pos_ts (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='states_daily_tests' name='federated.1dyvmz0008mux81gkv9jr0wcjta3' />
          </datasources>
          <datasource-dependencies datasource='federated.1dyvmz0008mux81gkv9jr0wcjta3'>
            <column caption='perc_positive_test' datatype='real' name='[Calculation_5299610892975808512]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([positive])/sum([total])' />
            </column>
            <column caption='max_date_data' datatype='boolean' name='[Calculation_5299610892993404929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] = {FIXED : MAX([date])}' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_5299610892993622018]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='top index' datatype='boolean' name='[Calculation_5299610892993830915]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_5299610892993622018] &lt;= 15'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[daily_new_tst_rcrd]' role='measure' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[full_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_5299610892993404929]' derivation='None' name='[none:Calculation_5299610892993404929:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[daily_new_tst_rcrd]' derivation='Sum' name='[sum:daily_new_tst_rcrd:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5299610892975808512]' derivation='User' name='[usr:Calculation_5299610892975808512:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5299610892993622018]' derivation='User' name='[usr:Calculation_5299610892993622018:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_5299610892993830915]' derivation='User' name='[usr:Calculation_5299610892993830915:nk:2]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Calculation_5299610892993622018]' ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892993622018:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:daily_new_tst_rcrd:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892993622018:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (full_state,state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[full_state]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:Calculation_5299610892993404929:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_5299610892993404929:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:state:nk]' direction='DESC' using='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:daily_new_tst_rcrd:qk]' />
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892993830915:nk:2]'>
            <groupfilter function='member' level='[usr:Calculation_5299610892993830915:nk:2]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:Calculation_5299610892993404929:nk]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (State)]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (state)]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892993830915:nk:2]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (full_state,state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:state:nk]</rows>
        <cols>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{4A401507-FA07-4775-8E60-2A73CC3E388F}' />
    </worksheet>
    <worksheet name='perc_pos_ts (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='24'>Positive</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='states_daily_tests' name='federated.1dyvmz0008mux81gkv9jr0wcjta3' />
          </datasources>
          <datasource-dependencies datasource='federated.1dyvmz0008mux81gkv9jr0wcjta3'>
            <column caption='max_date_data' datatype='boolean' name='[Calculation_5299610892993404929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] = {FIXED : MAX([date])}' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[full_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_5299610892993404929]' derivation='None' name='[none:Calculation_5299610892993404929:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[positive]' derivation='Sum' name='[sum:positive:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (full_state,state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[full_state]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:Calculation_5299610892993404929:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_5299610892993404929:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:Calculation_5299610892993404929:nk]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (State)]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (state)]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (full_state,state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='24' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:positive:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{83798EDD-CEF2-4298-87E3-50ED4A86AEA8}' />
    </worksheet>
    <worksheet name='perc_pos_ts (4)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='24'>Total Tested</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='states_daily_tests' name='federated.1dyvmz0008mux81gkv9jr0wcjta3' />
          </datasources>
          <datasource-dependencies datasource='federated.1dyvmz0008mux81gkv9jr0wcjta3'>
            <column caption='max_date_data' datatype='boolean' name='[Calculation_5299610892993404929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] = {FIXED : MAX([date])}' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[full_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_5299610892993404929]' derivation='None' name='[none:Calculation_5299610892993404929:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total]' derivation='Sum' name='[sum:total:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (full_state,state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[full_state]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:Calculation_5299610892993404929:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_5299610892993404929:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:Calculation_5299610892993404929:nk]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (State)]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (state)]</column>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Action (full_state,state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='26' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:total:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{81EAD066-0291-46C6-976E-5AB673A6AB26}' />
    </worksheet>
    <worksheet name='perc_positive_map'>
      <table>
        <view>
          <datasources>
            <datasource caption='states_daily_tests' name='federated.1dyvmz0008mux81gkv9jr0wcjta3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dyvmz0008mux81gkv9jr0wcjta3'>
            <column caption='perc_positive_test' datatype='real' name='[Calculation_5299610892975808512]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([positive])/sum([total])' />
            </column>
            <column caption='max_date_data' datatype='boolean' name='[Calculation_5299610892993404929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] = {FIXED : MAX([date])}' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[full_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_5299610892993404929]' derivation='None' name='[none:Calculation_5299610892993404929:nk]' pivot='key' type='nominal' />
            <column-instance column='[full_state]' derivation='None' name='[none:full_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[positive]' derivation='Sum' name='[sum:positive:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5299610892975808512]' derivation='User' name='[usr:Calculation_5299610892975808512:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:Calculation_5299610892993404929:nk]'>
            <groupfilter function='member' level='[none:Calculation_5299610892993404929:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:Calculation_5299610892993404929:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]' max='0.25' min='0.0051546391752577319' num-steps='5' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]' />
              <size column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:positive:qk]' />
              <lod column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:state:nk]' />
              <lod column='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:full_state:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#000000' fontsize='12' indent='3600'>State Name:</run>
                <run fontcolor='#787878' indent='3600'>Æ&#9;</run>
                <run bold='true' indent='3600'>&lt;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:full_state:nk]&gt;</run>
                <run indent='3600'>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='12' indent='3600'>State Abb:</run>
                <run fontcolor='#787878' indent='3600'>Æ&#9;</run>
                <run bold='true' indent='3600'>&lt;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:state:nk]&gt;</run>
                <run indent='3600'>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='12' indent='3600'>Total Positive:</run>
                <run fontcolor='#787878' indent='3600'>Æ&#9;</run>
                <run bold='true' indent='3600'>&lt;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:positive:qk]&gt;</run>
                <run indent='3600'>Æ&#10;</run>
                <run fontcolor='#000000' indent='3600'>Percent of Test which are Positive:</run>
                <run fontcolor='#787878' indent='3600'>Æ&#9;</run>
                <run bold='true' indent='3600'>&lt;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Latitude (generated)]</rows>
        <cols>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{48E2F8A3-19ED-4F95-8962-8C37F8F64C97}' />
    </worksheet>
    <worksheet name='recovts'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[var]' derivation='Sum' name='[sum:var:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[var]' role='measure' type='quantitative' />
            <column datatype='string' name='[var_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]'>
            <groupfilter function='level-members' level='[final_state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]'>
            <groupfilter function='member' level='[none:var_name:nk]' member='&quot;recovered&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]</rows>
        <cols>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</cols>
      </table>
      <simple-id uuid='{83968111-1A59-4AD0-ADF6-2A738D014E86}' />
    </worksheet>
    <worksheet name='top_overall'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Top Overall</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
          </datasources>
          <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
            <column caption='Max Date' datatype='boolean' name='[Calculation_3372914673829322752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] = { FIXED :max([date])}' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_3372914673872211971]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Index Filter' datatype='boolean' name='[Calculation_3372914673872375812]' role='measure' type='nominal'>
              <calculation class='tableau' formula='Index() &lt; 20'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[final_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_3372914673829322752]' derivation='None' name='[none:Calculation_3372914673829322752:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[final_state]' derivation='None' name='[none:final_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[var_name]' derivation='None' name='[none:var_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[var]' derivation='Sum' name='[sum:var:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3372914673872211971]' derivation='User' name='[usr:Calculation_3372914673872211971:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_3372914673872375812]' derivation='User' name='[usr:Calculation_3372914673872375812:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column datatype='real' name='[var]' role='measure' type='quantitative' />
            <column datatype='string' name='[var_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673872211971:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673872211971:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673872211971:qk]&quot;</bucket>
              <bucket>&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]'>
            <groupfilter function='level-members' level='[final_state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]'>
            <groupfilter function='member' level='[none:Calculation_3372914673829322752:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]'>
            <groupfilter function='member' level='[none:var_name:nk]' member='&quot;conf&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673872375812:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_3372914673872375812:nk:1]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:var:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673872375812:nk:1]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (final_state)]</column>
            <column>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.090agmf10acl1g1eoxdrd03bwr62].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]</rows>
        <cols>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C6F1FDF8-2D14-4D92-AA59-B2E540BF78FF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='clean_data' name='federated.090agmf10acl1g1eoxdrd03bwr62' />
      </datasources>
      <datasource-dependencies datasource='federated.090agmf10acl1g1eoxdrd03bwr62'>
        <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='88' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='77' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='70' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='68' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='37' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                    <zone h='98000' id='26' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                      <zone h='98000' id='22' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                        <zone h='98000' id='20' type='layout-basic' w='98400' x='800' y='1000'>
                          <zone h='76631' id='7' param='horz' type='layout-flow' w='98400' x='800' y='22369'>
                            <zone h='76631' id='5' type='layout-basic' w='98400' x='800' y='22369'>
                              <zone h='47506' id='3' name='Map' show-title='false' w='68200' x='800' y='22369'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='29125' id='65' type='layout-basic' w='98400' x='800' y='69875'>
                                <zone h='29125' id='32' param='horz' type='layout-flow' w='76695' x='800' y='69875'>
                                  <zone fixed-size='234' h='29125' id='24' is-fixed='true' name='confts' show-title='false' w='24200' x='800' y='69875'>
                                    <layout-cache minheight='202' minwidth='159' type-h='scalable' type-w='scalable' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                  <zone h='29125' id='28' name='recovts' show-title='false' w='26247' x='25000' y='69875'>
                                    <layout-cache cell-count-w='59' non-cell-size-w='52' type-h='fixed' type-w='cell' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                  <zone h='29125' id='30' name='deathts' show-title='false' w='26248' x='51247' y='69875'>
                                    <layout-cache cell-count-w='59' non-cell-size-w='59' type-h='fixed' type-w='cell' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                </zone>
                                <zone h='29125' id='66' param='horz' type='layout-flow' w='21705' x='77495' y='69875'>
                                  <zone h='29125' id='35' name='grth_rt' show-title='false' w='21705' x='77495' y='69875'>
                                    <layout-cache cell-count-w='31' minheight='180' non-cell-size-w='45' type-h='scalable' type-w='cell' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                </zone>
                              </zone>
                              <zone h='47506' id='89' param='horz' type='layout-flow' w='30200' x='69000' y='22369'>
                                <zone h='47506' id='40' name='Top_Growth' w='15100' x='69000' y='22369'>
                                  <layout-cache cell-count-w='1' non-cell-size-w='81' type-h='cell' type-w='cell' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='47506' id='86' name='top_overall' w='15100' x='84100' y='22369'>
                                  <layout-cache cell-count-w='1' non-cell-size-w='81' type-h='fixed' type-w='cell' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                          <zone h='6750' id='14' layout-strategy-id='distribute-evenly' param='horz' type='layout-flow' w='98400' x='800' y='15619'>
                            <zone h='6750' id='9' name='Conf' show-title='false' w='32800' x='800' y='15625'>
                              <layout-cache fixed-size-h='76' type-h='fixed' type-w='fixed' />
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='6750' id='10' name='Recov' show-title='false' w='32800' x='33600' y='15625'>
                              <layout-cache type-h='fixed' type-w='fixed' />
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='6750' id='12' name='Death' show-title='false' w='32800' x='66400' y='15625'>
                              <layout-cache type-h='fixed' type-w='fixed' />
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                          <zone h='7369' id='15' param='horz' type='layout-flow' w='98400' x='800' y='8250'>
                            <zone h='7369' id='16' type='text' w='33200' x='800' y='8250'>
                              <formatted-text>
                                <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Confirmed</run>
                              </formatted-text>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='7369' id='17' type='text' w='32400' x='34000' y='8250'>
                              <formatted-text>
                                <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Recovered</run>
                              </formatted-text>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='7369' id='18' type='text' w='32800' x='66400' y='8250'>
                              <formatted-text>
                                <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Death</run>
                              </formatted-text>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                          <zone forceUpdate='true' h='7250' id='19' type='text' w='79290' x='800' y='1000'>
                            <formatted-text>
                              <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='24'>COVID-19 OUTBREAK</run>
                            </formatted-text>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='7250' id='73' mode='dropdown' name='Map' param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]' type='filter' w='19110' x='80090' y='1000'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2300' minheight='2300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='96' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='97' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='7250' id='19' type='text' w='79290' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='24'>COVID-19 OUTBREAK</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7369' id='16' type='text' w='33200' x='800' y='8250'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Confirmed</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7369' id='17' type='text' w='32400' x='34000' y='8250'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Recovered</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7369' id='18' type='text' w='32800' x='66400' y='8250'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Death</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='46' h='6750' id='9' is-fixed='true' name='Conf' show-title='false' w='32800' x='800' y='15625'>
                  <layout-cache fixed-size-h='76' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='46' h='6750' id='10' is-fixed='true' name='Recov' show-title='false' w='32800' x='33600' y='15625'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='46' h='6750' id='12' is-fixed='true' name='Death' show-title='false' w='32800' x='66400' y='15625'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='73' mode='dropdown' name='Map' param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]' type='filter' w='19110' x='80090' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47506' id='3' is-fixed='true' name='Map' show-title='false' w='68200' x='800' y='22369'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47506' id='40' is-fixed='true' name='Top_Growth' w='15100' x='69000' y='22369'>
                  <layout-cache cell-count-w='1' non-cell-size-w='81' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47506' id='86' is-fixed='true' name='top_overall' w='15100' x='84100' y='22369'>
                  <layout-cache cell-count-w='1' non-cell-size-w='81' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='225' h='29125' id='24' is-fixed='true' name='confts' show-title='false' w='24200' x='800' y='69875'>
                  <layout-cache minheight='202' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='225' h='29125' id='28' is-fixed='true' name='recovts' show-title='false' w='26247' x='25000' y='69875'>
                  <layout-cache cell-count-w='59' non-cell-size-w='52' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='225' h='29125' id='30' is-fixed='true' name='deathts' show-title='false' w='26248' x='51247' y='69875'>
                  <layout-cache cell-count-w='59' non-cell-size-w='59' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='225' h='29125' id='35' is-fixed='true' name='grth_rt' show-title='false' w='21705' x='77495' y='69875'>
                  <layout-cache cell-count-w='31' minheight='180' non-cell-size-w='45' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9F04865B-3E81-4D3B-B410-DBF548003A74}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='53750' id='3' name='perc_positive_map' show-title='false' w='77600' x='800' y='15125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30125' id='10' name='perc_pos_ts' show-title='false' w='98400' x='800' y='68875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='67875' id='11' name='perc_pos_ts (2)' show-title='false' w='20800' x='78400' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14125' id='12' name='perc_pos_ts (3)' w='38800' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14125' id='13' name='perc_pos_ts (4)' w='38800' x='39600' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='105' h='14125' id='12' is-fixed='true' name='perc_pos_ts (3)' w='38800' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='105' h='14125' id='13' is-fixed='true' name='perc_pos_ts (4)' w='38800' x='39600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='67875' id='11' is-fixed='true' name='perc_pos_ts (2)' show-title='false' w='20800' x='78400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53750' id='3' is-fixed='true' name='perc_positive_map' show-title='false' w='77600' x='800' y='15125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='233' h='30125' id='10' is-fixed='true' name='perc_pos_ts' show-title='false' w='98400' x='800' y='68875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A9AC5458-5822-4409-8664-D458069891CF}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:city:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:county_id:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:derived_state:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:region:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state_lat:qk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state_long:qk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C81E9BC2-12F9-4007-B272-1571FA8D7041}' />
    </window>
    <window class='worksheet' name='Conf'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]' type='filter' values='cascading' />
            <card param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:city:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:county_id:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state_lat:qk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{36EFDF4D-0488-4FC4-A7D1-A95A2BD9DB6B}' />
    </window>
    <window class='worksheet' name='Recov'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A84E5208-9B83-4E08-B8A1-4E2C02E5D561}' />
    </window>
    <window class='worksheet' name='Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state_lat:qk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state_long:qk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53E27234-BF0D-4221-8AEF-72934DA261D5}' />
    </window>
    <window class='worksheet' name='confts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:county_id:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state_lat:qk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5AAC447-20D9-4F54-8C3F-869CEEFF2B9B}' />
    </window>
    <window class='worksheet' name='Conf_daily_new'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:county_id:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state_lat:qk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D027FFC3-3E3F-4B40-84E8-F910E6164F80}' />
    </window>
    <window class='worksheet' name='confts (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:county_id:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state_lat:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state_lat:qk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0AC49FCA-7183-48D5-9220-D5A3443CDED7}' />
    </window>
    <window class='worksheet' name='recovts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:county_id:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCB93151-9575-4397-9904-2CC41599763E}' />
    </window>
    <window class='worksheet' name='deathts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.090agmf10acl1g1eoxdrd03bwr62].[Action (state_lat,state_long)]' type='filter' />
            <card param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:county_id:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CAF1D540-FF02-4D76-B031-BF9D0BFFC34D}' />
    </window>
    <window class='worksheet' name='grth_rt'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:county_id:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:date:qk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8BC83384-1226-4162-9A43-BDDCD659C493}' />
    </window>
    <window class='worksheet' name='Top_Growth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673872375812:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE8DACE9-2D39-4116-B8BB-CD38B63685AC}' />
    </window>
    <window class='worksheet' name='top_overall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673872211971:qk]&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:Calculation_3372914673829322752:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:state:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:var_name:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[usr:Calculation_3372914673872375812:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDD892B9-6FB0-4315-8C1A-27CFF71A47DD}' />
    </window>
    <window class='worksheet' name='Daily Growth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[md:date:ok]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:country:nk]</field>
            <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:date:qk]</field>
            <field>[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[md:date:ok]</field>
            <field>[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:var_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B55674FC-0B4D-46E8-B3B8-8BAAAC3B2CCD}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{589A39FC-60B9-41DE-B236-C56160677BE3}' />
    </window>
    <window class='dashboard' name='Dashboard 1' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Conf'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Recov'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top_Growth'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[none:final_state:nk]</field>
                    <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:new_cases_t0:qk]</field>
                    <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</field>
                    <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[Multiple Values]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;China&quot;</value>
                  <value>926.0</value>
                  <value>&quot;[federated.090agmf10acl1g1eoxdrd03bwr62].[sum:new_cases_t0:qk]&quot;</value>
                  <value>926.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='confts'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.090agmf10acl1g1eoxdrd03bwr62].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='deathts'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='grth_rt'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='recovts'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='top_overall'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{01572122-2529-4881-B0C5-FC66DA573D49}' />
    </window>
    <window class='worksheet' name='Log_Scale_Growth' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:Calculation_4600708524000423936:nk]</field>
            <field>[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:country:nk]</field>
            <field>[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:days_since_100:ok]</field>
            <field>[federated.1wcfqkj0olhvf214b26dd1xz7w2i].[none:var_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00110A29-7136-400F-83F6-93D57B97192D}' />
    </window>
    <window class='dashboard' name='Dashboard 2' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='perc_pos_ts'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='perc_pos_ts (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='perc_pos_ts (3)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='perc_pos_ts (4)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='perc_positive_map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{988B1036-6120-4042-9474-E96F4267165F}' />
    </window>
    <window class='worksheet' name='perc_pos_ts' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[md:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C050F1D1-3F27-4578-BD6F-0F95E8EA4B18}' />
    </window>
    <window class='worksheet' name='perc_pos_ts (2)' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892993622018:qk:3]&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[md:date:ok]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:Calculation_5299610892993404929:ok]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:state:nk]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892993830915:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C46E1B70-9C91-4A0B-A4D6-46AC976FE256}' />
    </window>
    <window class='worksheet' maximized='true' name='perc_pos_ts (3)' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892993622018:qk:3]&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[md:date:ok]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:Calculation_5299610892993404929:ok]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:state:nk]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892993830915:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA4236BF-0917-4DDA-9FE8-44AE31FFF243}' />
    </window>
    <window class='worksheet' name='perc_pos_ts (4)' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892993622018:qk:3]&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[:Measure Names]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[md:date:ok]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:Calculation_5299610892993404929:ok]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:state:nk]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892993830915:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC288D14-D4C3-4EDC-BA34-76338AC8FD02}' />
    </window>
    <window class='worksheet' name='perc_positive_map' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[sum:positive:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1dyvmz0008mux81gkv9jr0wcjta3].[usr:Calculation_5299610892975808512:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[md:date:ok]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:Calculation_5299610892993404929:nk]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:full_state:nk]</field>
            <field>[federated.1dyvmz0008mux81gkv9jr0wcjta3].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{702B3928-BCF4-4413-AEB7-EE4991F3F9EF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='37' name='Conf' width='84'>
      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
      2R/70wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Conf_daily_new' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJZElEQVR4nO3cWVNb9xnH8a+OBEhYAgPGgPEiYwcvjePUsSfLtJnO9CIzbWfal9A30Pfg
      9j10ptObXrS9SHLRyTRbkzh1vIFjY7teWGV2bCSBJDYtiHNOLzLxeIIChCSyh+f3uUII/fVI
      o6/ONnbA930fEaOc7TxIzchOsa0APM/7oecQeSa2FYDITqEAxDQFIKYpADFNAYhpCkBMUwBi
      mgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBi
      mgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBi
      mgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBi
      mgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBi
      mgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMC33zF4uzE3zR14+35vCr375FzbOYSqRK1gXgOAFc
      18X3n8U4ItW1bhdoV2sbs4lRSit53GcxkUgVBXx//Xd9sVikrrbMWCJPV3fbuge5rkswGKzK
      gCI/pooHweFwGN8vkU4tVnsekaqqGMDwwCDv/uNDTpyNV3kckeqqGEA+M0bOjRIO6xyQ7GwV
      Ayj7HumRaR0Ey45XMYDG5i4OdsUIVHsakSqrGEDQzxNr7Xxyp+973P7yOvlVbRNkZ1l3IQwg
      k00zNTCF+7uvbru5cZyWQyRGEvzk+FHW1tYolUoABINBXNet+HO5XCYQ0HZEnl8VA2hojvPr
      3xx8cjvYsI/MzUucPPuzJ+f/6+rqNl18K38j8ixVvBA2O5ngwfgMp479lL1tDesepAthslNU
      DADAc+e4cTXLq2++sO4+BSA7RcVdoKmHg8znyxw+Ea/yOCLVVfEsUG4uRd+N+zS2xqo9j0hV
      VdwC7N7TSnPjUrVnEam6iluAdHKc7OOCrgTLjlf5SnBjM/OlLLXVnkakyioGMDmR5PSpbvSP
      wmSnq3gadCmXIbOQZ/+h/VQ62anToLJTfOt1gI0oANkp9N+iiGkKQExTAGKaAhDTFICYpgDE
      NAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDE
      NAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDE
      NAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDE
      NAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDE
      NAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDEtNB2HhQIBHBdFwDf9wkEAut+3uw+z/NwHGdL
      f/tt9/m+/2Se7/r8T9/+PrM8/fxPr7PRbJvN/c11qv2atjPLD7VOtV/TtgJ4eojtCgQC33ud
      b36QnuUsz9s6z9MsP9Q6P8YsAf/rT5GIQcHz58+fr8YTLU4NM760SmZ+gdJCklwRKC7w6ccX
      iDXF+M/FHk52H910nZGRYZYyKUrUMvlwkHBjC4/Hhui5eZuRwQFyhTU621s3XefzT97HDUaY
      nZnm8ewM2cUSTQ0Rrnz+EVl3F+0tDZuuUcik+fDCf2mMRUnnlrl34wrRPZ2M3r/FtRt3Odz9
      AqFNNk652Uk+u3yD3Q1hUrkct69dp7ljP4VcmgfD4+Rzs/TcHqT7SHzDdS5/9jEFakk/mib1
      aJr0UpHWlhhXLlwkGHS58OkFoh2HaYzUbLBKiffefY+GPXuYejTLaP//CER2E3JX+OzDTyg5
      AS5dukb3sWM4G7yux4l+rt4dpjHskFlZovdiLx3xOHPTo1y81sfM6AATySzxg/s3fnPI8M47
      11gY+4K50H4y6RQRp8xi0Wd+aogbg1N0Hdy3yRpw8YN/UdvUzHsfXCDkFqiNREnNZUhNJqpz
      EOz7PsvLBVKzj7je08tcbpnlbBLfhxOvnCXx4C4LuRzeJut4nkehUGBmapKeS1dwPY/Z2Vmc
      YIgz517l8P69pOfmtzYTsJgcpffL+6QWyuTnk5Qch4bdTdQEvsNG0QnwZe9VhkYStLR18HBo
      ACfkUON4rG32gr6exAlwvecqw4kEezs6GB4YoGlvB43RWsK1Yep3Rbawik8hNU7vrVs8yq5S
      yiUproWIxzvxCBAOh1gtu1sYx+f+res8GBymrqGV6bFhPC/A4VOn6WyKEY3uYtOdBh9wHHqu
      XiaRSNDZ2U7//QECgSBnzp4hGAzibXHHI1JTi1NTw+zjR/T2XqV/6CHNjfXc7e9nfj69pTU6
      uo5x83IPLxzdx9TYEFc+eZ/FQIQD8Xh1doF8r0z/4EM6WqIkl10OdXz1DV1YnOf+8DivvvFz
      yoUlYrHYhuus5FIklzwoZIg07mV3LAJOkOnRIXKrQWIhl84jJ4lt+C33lXw+TyRcy53bd2jv
      aCO74nK8ax+3bt7m+OkzRMObr+GWy5R9n9WlDJNzeUKrOdriJ6nzVxiZmuelk91sdnhSXi3h
      B4LkcylmskX8lRyHjr9IYX6GwYkkHS0xgrta6DrQvvnridRx99ZtWtvayBVcThzp5PrVHloP
      HiY3N8dLL5+mJrjRd55HPr9KiFXuDU/QVO8Qad5P1CnSd3eAePwQiwWXU8ePbHjcVSoUCNaF
      ySUnyRQDrMwlOf7yK6QmhpjJFDjQGoVICwfaWzZ+cyiznF2m6Hm4a2sks0scPbiP+vp68H2W
      VpaJRTf+zHz93hSKRWprQkyNj9PW3k60eS8UsjoGENt0HUBMUwCyo6yuZHkwMvat968VFrk3
      NPrk9rauA4j8WN7+518pOk388vWXcUMRovWNOIE11gqLFPwQf//zX/jDH//ERN9HTGT20Hmg
      gamBO5x98xek0lk6a5I40dP8++2/MUcLoWKWF185R9+NPtpitXjRPTQ01ANdLCwuKwB5vrS0
      H2BlqcjA4AOmkovsWsvy0lu/Z/zeA8qex2s/e5O67AATKxESw0P0DWZ549gxxu70MpT2aD7X
      jOeWKNZ1Eo/BrmArU4/TnHvtdR6PjuJSfnJiwvM9/g+T26gSj+zwEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Daily Growth' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd5wdZ3nvv3Pm9L5ne9+VtJJWVrEsS+4dmyQ2jrFvEhIgN6HdC1yHSwD7
      hpIYDARIMCR0YsCh2eCY5hhcwF5jG1cVq3etpO17zu7p/czcP3bf2Tlnz9kibZXO7/ORvTNn
      5p33nXme9336K6mqqlJGGecpDIvdgTLKWEyUGaCM8xplBijjvEaZAco4r1FmgDLOaxgXuwOL
      ieBwH3sOHmPdxouo9DgAlUN7dxFMGbj4oo3IksSB11+jee1FOC0GQGX79u1ctOVidu3czubN
      Wxju62bf4W5kk5WLtmzBYTUVfdbRw4dpX70aGQCVw/teJy45uHBdx6RrTxzaS38wxdaLL8Ik
      S0QCg/QF06xZ2QzAzp3b2bhuNc+9uF13l5krrt3Kq10vkAasTi9bNm/CJEsc2rOd/kAEs82l
      tSn6LbDtimuxmyDk72fnvm6uvOYyjEA8OMzpQJI1K5sJDffRF8rQuap1Tt7/UsB5uwI8/fPv
      8Ee3v52nnnqSf/3q/YDCx97zP/joF77JQ9/9Ctff8lYSWZXfPPQNft61C4BY3x4+/MlvIAF3
      fuB9ADz33w/wz/9+P48/+ghXX3E5L+ztzntOaLCbd7/tz9hyzW2kx8995R//D5/4129z3yc+
      wEe+8N2867/0sffw/o9+gV889F2uvv4WRhJZjrzyFP/y7Ye1a+78wPtQUlG6urr44j1388Vv
      PEBX14tkCPOet/1vurq6eOi7X+aP/vy9APzLx9/HI7/p4mc//g+uuPF2kspEv7u6uujq6iKe
      GWv7+//+Sf7uzv/Nc3sHADi967nxZ+f44Hv+muHEXH6FJQD1fISSUC/bdKE6FE1rpwb2PqNe
      fdu7VWX8+HN//zb1gcdeUY+++Cv1LX93r6qqqvrL//is+s/3/0pVVVW94qptqqqq6iPf+if1
      iz/4taqqqnrq9d+q19z6rrxHDXQfVg+fHFCvueIqNT5+7rrrrlRzqqqq2YR6yeZL1fj4Q2MD
      e9XNV9+mZseP7//c36tfeOAxdfuvf6C+864vam2KZ6uqqn7rn+5Uv/XIM+NHfvWqbbeqqqqq
      6VhAveyaN6iqqqrvvHWbetA/dsX/uv1ydWdPIq/fE8ipt77xjeofHv+B+oHPfEtVVVU9+Mwj
      6jvv+qL6zE+/pr77H740/btdZjg/V4BgD3HPWqodE+LKocNH2LhpC9L48UVbt3Hg0GFWbnsD
      Azt+TxZ47PFnue3WN5RstnnjpUR79hEc7qOrq4tDx05T29pBR0tt3nX1Nvjmf/6Uxx9/knRo
      hEBy7HzvocOs2bgJebwT2y7ayuEDh2Y1tN4DL3DttdewYcuVfPifPq+df+WFLn7x8A94fcDG
      ylorAF//zN1ce+21XHvtHYSBkWOvYGvbxqXX3cyurt8gPKSPPfh13n7X1/jsP945q74sB5yf
      DOCqRg6dJq1MnGqqr6O3v0c77jl1krraajDYuOoCDy/uPsyxhIe11baSzSaGezB6Ggn6+8cY
      4HhP0eu++f2fkBk+wZHTw5i8Pnxj9Eh1Uz39vf3adSd7TlFTV4vJaCSby46fzYIil+xDY+cV
      dHU9y7NP/IIvf/wuEuNU/HLXr3n/B/+J+x/8Ca5xze99H/v8uAj0CG7gsV/+klee+RnX3fRm
      9r36e/b0RgG4+S/fxz/8zXV86/u/Kvnc5YrzUwk2evifb7qAd33g4/zNm6+jbyjK2/7sJtJ3
      38tXvtNJizvH1376Ao8+/VkAbv3TW/iHD7+fLTe9rWhzxw7s5rdPqnz9i5/nPf/307R1buGe
      e7YAMHj6GAeOnSYYCvL7ri7WdW7gyK7X6LzwYg6+/Djrb7gd+/iM712xlZb03Xz2K99hU4ub
      T33tp/zo0adptgTY/vef55GrNzC0/1nqLrih5NASET9dXV1ERwcZiSaQxtu+82Nf4K//+GLu
      fN/7+fnDP9T63dU1xtDbrriWXz35Ii/t2k2NzcCvH/hXfvGrJ/iLzrEG/vdHP88tN97E7puu
      ZGNb9Vl/gqUC+Z577rlnsTuxGLjkuptxZv28+OouVm/Ywqr2Fm67/Tb2bX+RnpEU937u8zRV
      OgGob2nl9Mk+3vr2/0mVZ2IF2Lx5jMhPHD1K32CAt733I9x67Za85xzfv53f/O451q7rpKe7
      m5qWDmqdBp5++ll8K7bwsf/7DmRBpRi45bbb6d63naM9I3z83s+xuqkSo62CW268nN93dWGp
      Wc0/3X0nZuPE4t3Q1kFDtReAyPAAh7u7CUTS/OO9n6K+wgXAmvVb6Fh7AatrzRzqjbC6vZET
      R4/S3d1Nd3c3my/Zhiq5uHLrBgCampvo94fY2LkKu7eatR0ruPKSTbx+uJcLVrfNxydZFEiq
      Wg6GK+P8xfmpA5RRxjjKDFDGeY0yA5RxXqPMAGWc1ygzQBnnNcoMUMZ5jTIDlHFeY8EZIBoc
      5rnnnmc0On1YoZKJ8x9fvY/f7zjID374g7N6btzfzW+6tk9/4TJA95H9dHV1sWvfYRbeiRPn
      kUd+s+BPnS8sKAOc3v8i7/3QJ0mlk+zatW/a61954qfEvOu5avMaNm7ceFbPTgTOHQZ44Cuf
      5nQYdv7uJ9zz7z9e4KcnzikGWNBYoO9+/Wt8+FPfZlOjHYA//OZBfvTEDnLxEHd+/LN8/1N3
      UrHxSvb8/gnee8+/87OfPsKRVCUXdjbz7S99nh//8Cvccct7kaUQH/rYJ7jzY1/gjmvX8+r+
      AS7bvJJdx8Pc/7m/44P/7148DjMb3/CXXNqY5d5/+xGtVQawXbiQw51XbLviWlovr+NdH/sB
      seETfOgTX8Btk7nsT99Jp93Pfd97lIbmlXzwPW/mrn+4l8oKJy2bb8Jw4ik63vQROnL7+Opv
      e9niC/LaUT/haIr7vvQF3vHnt2CVJf7qg//M0w99HaPTg7d1I//rtku58+57Wd3ZSmyxBz+H
      WFAGiMWTOB0W7fg/H36Sr37ne0QOP8dnfvQoRoy87d3vZ48vRffpEW697U0cZjXXbunk2+P3
      9PcM8ejzT1CZ6mbVBRdx9yfu5q1vv5MP3fUx3vrWt/PCk7+kN5Slpq6Sn/z4h3TXZLj7C1+j
      yv8Cn3zw8EIOd17xxX/8O073DPBvX/sGzzx2P/4Y1NXYefAHP6bF6OczX/ku1WaJ/37g89z0
      9g9xx9VreMffvoN/+eh7+PSDv2BF7jBvedcn+cTfvJEtV72Rwwdf4KVDwwz19/Cfjz6PeeAV
      /nFfL2+8soZf/NdPWG3q5k3vuJvbr6rir/7qk4s9/DnDgopAd/zZrXzza/eTzWXp6xugvsLC
      /u5Bdu7YSfuKmaXZta3bSKXTUvL3+oZ6OjZcwic+8Un+9ZMfoarSxcFDJxgeHp6rYSwJfOhT
      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
      ZHUyLfx/4eD8lz29mesAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      9rOfxTXXXIMXXngBDz30EADg0KFDuOWWW3DLLbfw8d///vdx8uRJyLKMv/3bv8UjjzyCp556
      CgDgOA6+8pWv4P7778fLL78MQRCwbt06fOQjH1mIn7Zo8fDDD2PHjh0wDANf//rXAQA/+9nP
      4DgO+vv78S//8i/44he/iGKxiB/96Ed43/veh8ceewzvfOc7ceONN/Lz3HfffTAMAxdffDFE
      UcT111+PP/zhD3j22Wfx1re+FQ8//DD+7M/+DFdddRW++c1v4rnnnsPf/M3f4Jprrpn/Hz0n
      3oVZwI4dO9hvfvMb9vzzz7d9dttttzHDMPj7YrHI7rzzTsYYY/feey/bvXt3y/g77riDqarK
      vvCFL7ScI0ArisUiM02Tff7zn/f9/N5772XPPfcc+973vsf27t3LGGNsfHycffnLX24Z96Uv
      fYlVq9WWY7qu89eHDh1i3/nOd5hpmqxarbKf//znvs95PrDoguEIN9xwAx588MG2488//zy2
      bt0KRZkIgTh69Cguu+wyAMCVV16JAwcOYMuWLXjmmWfw61//GgMDA4hEIrj66qvx7W9/G5FI
      BBs2XJjBb5Mhk8nAsqy240899RR+97vfQdd1fOhDH8KmTZvwiU98Ah/84Afx85//HHfeeWfL
      +K1bt+Kll16CpmkYHBzEX//1XyMUCoExhgceeADHjh3DX/3VX0GWZSQSifn6eb44p3QAxhh+
      +ctf4gMf+EDL8VQqhXK5DACoVCr8pr71rW/FV7/6VRSLRYyMjGDnzp34xCc+gY9+9KM4ePAg
      bNue999wLuL666/Hl7/8ZaxduxaPPvoo/vEf/xGf+9zn8K53vQu33347fvjDH7aMf+9734vt
      27fjpptugmma2LdvHxzHwW233QZBEPCpT30KuVyuw9XmF+cUAzz33HO45pprIIrNaauqiuPH
      j2PNmjXYt28fNE3D/fffj+uuuw6PP/448vk8DMNAo9GAIAioVCoYGRlBsVhEoVCAIFwYOQBn
      g1OnmkGFpDeNj4+jXC7zHVhRlDYFdteuXfz14OAgcrkcfvazn+HGG2/E+973vvmbfBdYlEpw
      vV7HXXfdxd9feuml+Mu//Es89thjuOGGGyDLTcntxz/+MTZs2IBrr70WR48exX333YdbbrkF
      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
      /wHDuUjz28jNXgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='37' name='Death' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAlCAYAAADyUO83AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAAY0lEQVRoge3QQREAIAzAMMC/5yEjjzUKer0zM2expwO0BugArQE6QGuADtAaoAO0BugA
      rQE6QGuADtAaoAO0BugArQE6QGuADtAaoAO0BugArQE6QGuADtAaoAO0BugAbf2AD4HrBEbi
      IdrnAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Log_Scale_Growth' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='37' name='Recov' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAlCAYAAADyUO83AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAA80lEQVRoge2asQmEQBBFv8dhuAUIplYgViGWILax1YiZmBrYgZlgbmJgBeY6VnBccrd/
      YefBxv/xmHAjEREEzIstwEYDsAXYaAC2ABsNwBZgowHYAmw0AFuAjQZgC7DRAGwBNhqALcDG
      uwDXdWEcR6RpiuM4/r7nTYD7vrEsC/I8R1VVzna9CLBtG8qyRFEUWNfV6TY9wHmeqOsa0zQh
      SRK0bQtrrbN9egAAyLIMfd9j33c0TYM4jp1tv50tfcAYg67raPteXAATDcAWYKMB2AJsNABb
      gE3wASBkhmEQAF+fMUbmef75fvAXEInoD5GgCT7AAzFED2PF7x/1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='130'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top_Growth' width='164'>
      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
      v2SVTAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='confts' width='192'>
      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
      BWmLgy7jMaxYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='confts (2)' width='192'>
      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
      vIhWqt8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='deathts' width='192'>
      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
      0XEXwHFhRcf0x1iYGztVDRFkhB2Ij8fuVQVVDRIUGiKYZD4VA1XF5wsRsIeIUGrsEPgDEVaX
      F/CFYqRiYUAQCERYWZrHH46Rijo72Tb5mx//kHJ3xObqsuMM/ubHP6La09lcXQJA2Dp//aMf
      URsYbKyMHZbBX/34h9QHJhsri47T+asf/pCmZrO+vDjZ9sd/+UNaI5v15YXJlJAf/eUPaeuC
      taWFcZ2p8aO//BEd48op2KbGj374IzoGrC3Njx3q+P0CMZIRPwiwFR9rywsogRiJsH98lfYF
      WFueRw3GiF85f5C1pSy+UIxYyA/CAn+E1aUs/lCcWMgHtgmBKCuLaQKR+DjMlokSirO8kCYY
      SYwDaRko4QTL8ynC0QThgA9h6qiRFIvZFJFYgpBfRev3WVzbJBzyk5mbc3a7xcrKEvlylc21
      VWd3mqyuLJIv19hcWxkf7IbJ2soi+UqDzVXXra8sUKg02Jg4i/XlBQrVJhvO9zh2WfLV1sS9
      tZtgU+uJV/uHk5sLIYQwvswNu+LV6yOP0wcdsff6SJhTbjToiL2DY6/rt8X+wYnHab222D/0
      umGvJV4fnQrLnnLd5hfcoNMUB8dnHlc6PxQX1Y6wLPdmqnh2IPL1rsflT16LYqPncRfH+6LU
      Gnhc7nBPVNpDjzs7eCmqXc3jTl+/FPXeyONO9l+IxjV3vP9CNPpe16qVxUkuL6Zv9Zq1sjjN
      Fa65kji98LpGtSTOvuCK4uyy6HH1SlGcf5nLlzyuVi6I3Je6ssflTg9FrdUV05yfHIh6q/dF
      1/a6s+PXotHuf9F1Bh53erQvmtfd4b5odoeT/7+9BTGKwrDX5Ce//LWrUBh2m/z0V7/x1A06
      dX76t59NKYV+p85Pf/2517Vq/Ow3jzyu16ry8988nn45us0Kv/jsycSpikKnXubnn+14tu3U
      y/zi86dunarQqhX55aNnE5dIJfnr//3fuKj1PO7Hf/Zfuaz3Jy41l+Qv/9efUmgMJm5uLsn/
      +R//iWLL7QbOpZP8+X//E0rt0cRl0in+93/5Y8odfcol+V9/+h+pdKddgv/5X/6YWs/9Ueb0
      XJz/+ad/Qr3vOlWFyuU5j57vTe0DKF+e8fjFvmdflS/OeDLlVAVKF2fsvHzt1gGl3ClPXx1M
      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
    </thumbnail>
    <thumbnail height='192' name='grth_rt' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='perc_pos_ts' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='perc_pos_ts (2)' width='192'>
      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
      u3eZPHkyarWauro6Tp06hcViwd7eXqjBO2vWLNzd3SkrK+P69ev09vai1+tpampi1apV95Un
      HQxGo5Hi4mJKSkpob2/nypUrmEwmLl26xLRp0wgPD2fatGkcPnyYa9eu0draisViYcmSJVit
      Vi5fvoxMJiMyMpK2tjays7Pp6OigpKSEuro69u/fj1qtJjk5Gblcjlar5ebNm4wePRo/Pz+C
      goLIy8ujvLycuro6UlJSBiuJdCd+5a9wHasEBxf8opNJfUmBJGkiflLoDE1khlRPiLcDZvMo
      FqbE8/xILxy/HehSOxXT1m+mssiNod9xHn5IpVL0er1gEjV58mTmz58vWIjExcWRm5tLQ0MD
      Li4uzJkzh6SkJORyOVKplJaWFpqamnBxcWHNmjXExMQMaf9sNhttbW3U1NRgNBqJiYnBarVS
      U1NDV1cXMpmMpUuXYm9vT1lZGSqVipkzZzJy5EjMZjPt7e3Y2dlhsVgwGAxotVpaWlpwc3PD
      zc2N6upq4N5OUP/uTlhYmCAYSkpKoqOjg9LSUmbOnEl4eLgwA4jZoCLDFjEbVGTY87+j7xaL
      1Wg46gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='49' name='perc_pos_ts (3)' width='124'>
      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
      187wIK75D/A5n+fPcLFqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='24' name='perc_pos_ts (4)' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADgUlEQVRYhe2YTUhqXRSG39MpRUP6g6A/ykEYNChwolkQhjVorNCkgQ5yUhI0aFYIBUGD
      jKSaBCJBNBCigsCQwLIGWUFCBIFFP+BfoQcUjpyzvsEFwc+I+11u91z4fGFP1tp7rWe/sBeH
      wxAR4X+sCqkBpFbZAKkBpFbZAKkBpFbZAKkBpFbZAKkBpFbZAKkBpFbZAKkBpNYvGyAIAoLB
      IMbGxtDa2orz8/OinMfjQWdnJ1iWhVwux8jICJ6engp7Li4u0NvbC5ZloVQqYbfbwXFcSR+O
      4zAwMACGYQqrpqam0C+bzcLpdKKhoQEMw6CxsREejweiKAIAeJ7H/v4+TCYTNBoNXl5efo8B
      e3t7cLlcmJ2dxfDwcFEulUohk8kgEAggn8+D4ziMjo7C4XAgl8vh7e0NDocDS0tL4HkesVgM
      1dXVWFhYKOmTzWbR1NSEZDIJIgIRIZ1OQ6/XAwDW1taQzWZxe3sLIkIgEIDb7cbNzQ0AYGVl
      BYeHh1heXkZPT0/pReg3yGazUSgU+nJPNBoli8VCmUyGQqEQ2Wy2ovxnMSKi+/t7slqtxPP8
      p3U/i8/Pz9PBwUFRLJ1Ok9lspufn56L4t88AnudxeXmJ6elpWCwWqFQqdHd3I5lMwufzQRAE
      JBIJrK6uwmQylZyPx+NoaWlBVVXVp/X/HT87O8Pd3R36+vp+iu/bDWBZFiqVCrW1tTg9PUU+
      n0cikUBlZSXa29vBMAxYlkVbWxui0WjJ+f7+fjidTgA/Zks4HIbBYMDR0VFhz8PDAwYHB7G1
      tQWdToednR3U1dX9FN8fMUCj0cDlcuH19RWxWAzBYBBDQ0PQarWoqKhAfX09pqamcHV1hUwm
      82UtrVaLiYkJhMNhAMDj4yMmJyexsbEBq9UKlmX/E9+3GBAMBrG+vo54PA7gxzPw+/14f3+H
      UqlER0cHvF4vIpEIRFEEx3HY3NwEwzBQKBRFtRYXF3F8fIxcLgdRFBEOh+F2u2EwGAAA29vb
      sNvt6Orq+jXYLyfXFzKbzQSgZJnNZvr4+KCZmRlqbm4mACSTychoNFIkEiEiIkEQyOv1klqt
      JgCkUChofHycEokEERGlUqnCELu+viaj0UgymYwAkFqtJp/PR4IgfMmxu7tL6XSadDrdp/m5
      uTkiImKI/r6/wicnJ9Dr9ZDL5d/e66/7EhRFEX6//49cHgD+AUKMo3m1j70sAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='perc_positive_map' width='192'>
      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
      ZwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='recovts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top_overall' width='164'>
      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
      FKgV/w9bLviB3ABlNAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
